# This is a basic workflow to help you get started with Actions

name: Build a Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  release:
    types: published


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Build the Release
    permissions:
      contents: write
       
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo "I am going to build the release and add content to the release notes."
      
      - name: Log the release ID and repository information
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            // Log the release ID and repository information
            console.log(The Release ID: *****)
            console.log(context.payload.release.id)
            console.log(The Repo info: *****)
            console.log(context.repo)

      - name: Generate Release Notes
        uses: actions/github-script@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            // Generate Release Notes
            const { data } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              tag_name: context.payload.release.tag_name,
              per_page: 100
            });
            console.log("Release Notes: *****")
            console.log(data)
            // Update the release with new content
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: context.payload.release.body + "\n\n" + data
            })

      - name: Build Release Assests
        run: |
          mkdir release-assets
          echo "This is a test file." > release-assets/test.txt
          zip -r release-assets.zip release-assets
      
      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-assets.zip
          asset_name: release-assets.zip
          asset_content_type: application/zip